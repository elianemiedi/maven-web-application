pipeline{
  agent any 
  tools {
    maven "maven3.8.6"
  }  
  stages {
    stage('1GetCode'){
      steps{
        sh "echo 'cloning the latest application version' "
git branch: 'feature', credentialsId: 'githubcredentials1', url: 'https://github.com/elianemiedi/maven-web-application'
      }
    }
    stage('3Test+Build'){
      steps{
        sh "echo 'running JUnit-test-cases' "
        sh "echo 'testing must passed to create artifacts ' "
        sh "mvn clean package"
      }
    }
    /*
    stage('4CodeQuality'){
      steps{
        sh "echo 'Perfoming CodeQualityAnalysis' "
        sh "mvn sonar:sonar"
      }
    } 

    stage('5uploadNexus'){
      steps{
        sh "mvn deploy"
      }
    }  
    stage('8deploy2prod'){
      steps{
        deploy adapters: [tomcat8(credentialsId: 'tomcat-credentials', path: '', url: 'http://44.203.120.100:8080/')], contextPath: null, war: 'target/*war'
      }     
    }
  }

post{
   always{
emailext body: '''hey 
please check build status 

thank 
landmark''', recipientProviders: [buildUser(), contributor(), developers(), brokenBuildSuspects(), brokenTestsSuspects()], subject: 'always', to: 'eliane.miedi@gmail.com'  
} 
    success{
emailext body: '''hey 
good job, build successful. 

thank 
landmark''', recipientProviders: [buildUser(), contributor(), developers(), brokenBuildSuspects(), brokenTestsSuspects()], subject: 'success', to: 'eliane.miedi@gmail.com'   
}
   failure{
emailext body: '''hey 
bab bab

thank 
landmark''', recipientProviders: [buildUser(), contributor(), developers(), brokenBuildSuspects(), brokenTestsSuspects()], subject: 'failure', to: 'eliane.miedi@gmail.com'
  }  
  }  
  */
   }
